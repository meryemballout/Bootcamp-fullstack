
--exercice 1

--Get a list of all the languages, from the language table.
SELECT * FROM language;

--Get a list of all films joined with their languages – select the following details : film title, description, and language name.
SELECT 
    film.title, 
    film.description, 
    language.name AS language_name
FROM film
JOIN language ON film.language_id = language.language_id;

--Get all languages, even if there are no films in those languages – select the following details : film title, description, and language name.
SELECT 
    film.title, 
    film.description, 
    language.name AS language_name
FROM language
LEFT JOIN film ON film.language_id = language.language_id;
--Create a new table called new_film with the following columns : id, name. Add some new films to the table.
CREATE TABLE new_film (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
INSERT INTO new_film (name) VALUES 
('HARRY POTTER'), 
('Inception'), 
('The Matrix');
--
--Create a new table called new_film with the following columns : id, name. Add some new films to the table.

--Create a new table called customer_review, which will contain film reviews that customers will make.
--Think about the DELETE constraint: if a film is deleted, its review should be automatically deleted.
--It should have the following columns:
--review_id – a primary key, non null, auto-increment.
--film_id – references the new_film table. The film that is being reviewed.
--language_id – references the language table. What language the review is in.
--title – the title of the review.
--score – the rating of the review (1-10).
--review_text – the text of the review. No limit on the length.
--last_update – when the review was last updated.
CREATE TABLE customer_review (
    review_id SERIAL PRIMARY KEY,
    film_id INT NOT NULL,
    language_id INT NOT NULL,
    title VARCHAR(255),
    score INT CHECK (score BETWEEN 1 AND 10),
    review_text TEXT,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (film_id) REFERENCES new_film(id) ON DELETE CASCADE,
    FOREIGN KEY (language_id) REFERENCES language(language_id)
);

--Add 2 movie reviews. Make sure you link them to valid objects in the other tables.

INSERT INTO customer_review (film_id, language_id, title, score, review_text)
VALUES 
(1, 1, 'Fantastic Sci-Fi', 9, 'An exciting journey through space and time.'),
(2, 1, 'Full of Thrill', 8, 'An adventure inside dreams.');

--Delete a film that has a review from the new_film table, what happens to the customer_review table?
DELETE FROM new_film WHERE id = 1;
 
 

